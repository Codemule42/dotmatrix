# ~/.washrc
# vim:set ft=sh sw=2 sts=2:

[ -e "$WESTARETE_DIR" ] || WESTARETE_DIR="$HOME/westarete"
export WESTARETE_DIR

for dir in /opt/local/bin /usr/local/bin "$HOME/bin"; do
  case "$PATH:" in
    *:"$dir":*) PATH="`echo "$PATH"|sed -e "s#:$dir##"`" ;;
  esac
  [ ! -d "$dir" ] || PATH="$dir:$PATH"
done
for dir in /usr/local/sbin /opt/local/sbin; do
  case ":$PATH:" in
    *:"$dir":*) ;;
    *) [ ! -d "$dir" ] || PATH="$PATH:$dir" ;;
  esac
done

WESTARETE_AUTHOR_JEFF="Jeff Buechler"
WESTARETE_AUTHOR_JUSTIN="Justin Fedick"
WESTARETE_AUTHOR_BRITT="Brittany Hostetler"
WESTARETE_AUTHOR_CLINTON="Clinton Judy"
WESTARETE_AUTHOR_ASH="Ash Skutches"
WESTARETE_AUTHOR_SCOTT="Scott Woods"

wcd() {
  cd "$WESTARETE_DIR/$1"
}

wpair() {
  local name email args initials author ret
  name=""
  email="developers"
  if [ -n "$ZSH_VERSION" ]; then
    eval 'args=(${(i)@})'
  else
    args="`for arg in "$@"; do echo "x$arg"|sed -e 's/^x//'|tr ' ' _; done|sort -f`"
  fi
  for arg in $args; do
    initials=
    author=
    case "x$arg" in
      x-h)
      echo 'wpair rocketeer1 rocketeer2'
      echo 'wpair rocketeer1 gueststar1="Real Name"'
      echo 'wpair -u # go solo'
      echo 'wpair    # status'
      return 1
      ;;
      x-e) ret=email;    continue ;;
      x-n) ret=name;     continue ;;
      x-f) ret=file;     continue ;;
      x-c) ret=commit;   continue ;;
      x-s) ret=setenv;   continue ;;
      x-u) ret=unsetenv; continue ;;
      x-w) echo "-w is now the default" >&2; continue ;;
      x-*) echo "Unknown option $arg" >&2; return 1 ;;
      x*=*)
      initials="`echo "$arg"|sed -e s/=.*//`"
      author="`echo "$arg"|sed -e s/[^=]*=//|tr _ ' '`"
      ;;
      [^-]*)
      initials="`echo "$arg"|tr a-z A-Z`"
      eval "author=\"\$WESTARETE_AUTHOR_$initials\""
      ;;
    esac
    if [ -z "$author" ]; then
      echo "Invalid id $arg" >&2
      return 1
    fi
    name="$name and $author"
    email="$email+`echo "$initials"|tr A-Z a-z`"
  done
  name="`echo $name|sed -e 's/^ *and *//'`"
  email="$email@westarete.com"
  case "$ret" in
    unsetenv) unset GIT_AUTHOR_NAME GIT_AUTHOR_EMAIL
    rm -f "$HOME/.wpairrc"
    ;;
    email) echo "$email" ;;
    name)  echo "$name" ;;
    file) git config user.name "$name" && git config user.email "$email" ;;
    commit)
    (
    if [ "" = "$name" ]; then
      unset GIT_AUTHOR_NAME GIT_AUTHOR_EMAIL
    else
      export GIT_AUTHOR_NAME="$name" GIT_AUTHOR_EMAIL="$email"
    fi
    git commit
    ) ;;
    *)
    if [ "" = "$name" ]; then
      echo "$GIT_AUTHOR_NAME <$GIT_AUTHOR_EMAIL>"
    else
      export GIT_AUTHOR_NAME="$name" GIT_AUTHOR_EMAIL="$email"
      echo "$GIT_AUTHOR_NAME <$GIT_AUTHOR_EMAIL>"
      rm -f "$HOME/.wpairrc"
      echo "export GIT_AUTHOR_NAME=\"$GIT_AUTHOR_NAME\"" > "$HOME/.wpairrc"
      echo "export GIT_AUTHOR_EMAIL=\"$GIT_AUTHOR_EMAIL\"" >> "$HOME/.wpairrc"
      echo wpair >> "$HOME/.wpairrc"
    fi ;;
  esac
}
[ -n "$GIT_AUTHOR_EMAIL" -o ! -f "$HOME/.wpairrc" -o -z "$PS1" ] || . "$HOME/.wpairrc"

git() {
  [ -f "$HOME/.hitch_export_authors" ] && . "$HOME/.hitch_export_authors"
  [ -f "$HOME/.wpairrc" ] && . "$HOME/.wpairrc" >/dev/null
  if command -v hub >/dev/null; then
    command hub "$@"
  else
    command git "$@"
  fi
}

wclone() {
  local url basename example new
  if [ x-f = "x$1" ]; then
    shift
    rm -rf "$WESTARETE_DIR/`basename $1 .git`"
  fi
  basename="`basename $1 .git`"
  if [ ! -d "$WESTARETE_DIR/$basename" ]; then
    new=1
    case "$1" in
      *:*) url="$1" ;;
      */*) url="git@github.com:$1.git" ;;
      *)   url="git@github.com:westarete/$1.git" ;;
    esac
    git clone "$url" "$WESTARETE_DIR/$basename" || return 1
    for example in "$WESTARETE_DIR/$basename"/config/*.example.yml; do
      cp "$example" "${example%.example.yml}.yml"
    done 2>/dev/null
    if [ -f "$WESTARETE_DIR/$basename/.rvmrc" ] && command -v __rvm_trust_rvmrc >/dev/null; then
      __rvm_trust_rvmrc "$WESTARETE_DIR/$basename/.rvmrc"
    fi
  fi
  wcd "$basename"
  if [ ! -f .git/hooks/post-rewrite ]; then
    cat > .git/hooks/post-rewrite <<EOS
#!/bin/sh

GIT_DIR="\$(dirname "\$(dirname "\$0")")"
export GIT_DIR

case "\$1" in
  rebase) exec "\$GIT_DIR/hooks/post-merge" 0 rebase ;;
esac
EOS
  fi
  if [ ! -f .git/hooks/pre-commit ]; then
    echo '#!/bin/sh' > .git/hooks/pre-commit
    echo 'git diff --exit-code --cached -- Gemfile Gemfile.lock >/dev/null || bundle check' >> .git/hooks/pre-commit
  fi
  if [ ! -f .git/hooks/ctags ]; then
    echo '#!/bin/sh' > .git/hooks/ctags
    echo 'rm -f .git/tags' >> .git/hooks/ctags
    echo 'ctags --tag-relative -f .git/tags --exclude=.git --languages=-javascript,sql -R' >> .git/hooks/ctags
    chmod +x .git/hooks/ctags
    for basename in post-checkout post-commit post-merge; do
      echo '#!/bin/sh' > .git/hooks/$basename
      echo '$GIT_DIR/hooks/ctags >/dev/null 2>&1 &' >> .git/hooks/$basename
      chmod +x .git/hooks/$basename
    done
    .git/hooks/ctags
  fi
  if [ ! -f .git/hooks/bundle ]; then
    cat > .git/hooks/bundle <<EOS
#!/bin/sh
unset GIT_DIR
if [ -f Gemfile ] && command -v bundle >/dev/null; then
  echo 'Bundling...'
  bundle | grep -v '^Using ' | grep -v ' is complete'
  true
fi
EOS
    chmod +x .git/hooks/bundle
    echo "if git diff --name-only \$1 \$2 | egrep -q '^Gemfile|\\.gemspec\$'; then" >> .git/hooks/post-checkout
    echo "  \$GIT_DIR/hooks/bundle" >> .git/hooks/post-checkout
    echo "fi" >> .git/hooks/post-checkout
    [ -z "$new" ] || .git/hooks/bundle
  fi
  if [ -n "$new" -a -x script/setup ]; then
    script/setup
  fi
}

# Tab completion
if [ -n "$BASH_VERSION" ]; then
  _wcd()
  {
    local cur projects

    [ -r "$WESTARETE_DIR" ] || return 0

    eval 'COMPREPLY=()'
    cur=${COMP_WORDS[COMP_CWORD]}
    projects=$(\ls "$WESTARETE_DIR")

    if [ $COMP_CWORD -eq 1 ]; then
      eval 'COMPREPLY=( $(compgen -o filenames -W "$projects" $cur) )'
    fi

    return 0
  }
  complete -F _wcd wcd wclone
elif [ -n "$ZSH_VERSION" ]; then
  #compdef '_files -W "$WESTARETE_DIR"' wcd wclone
  compctl -/ -W "$WESTARETE_DIR" wcd wclone
fi

rails_root() {
  (
  dir=${1:-$(pwd)}
  i=0
  while [ "/" != "$dir" -a "$i" -ne 16 ]; do
    if [ -f "$dir/config/environment.rb" ]; then
      echo "$dir"
      return 0
    fi
    dir="$(dirname "$dir")"
    i=$(expr $i + 1)
  done
  return 1
  )
}

script_rails() {
  if [ -f "`rails_root`/script/rails" ]; then
    "`rails_root`/script/rails" "$@"
  else
    local name
    name="$1"
    shift
    "`rails_root`/script/$name" "$@"
  fi
}


alias dirtycuke="git status --porcelain | grep '\.feature' | sed 's/.* //' | xargs cucumber"
alias dirtyspec="git status --porcelain | grep '\_spec.rb' | sed 's/.* //' | xargs rspec"

